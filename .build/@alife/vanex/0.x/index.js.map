{"version":3,"sources":["index.js","src/plugin/index.js","src/utils.js","src/vanex-model.js","src/vanex-relation.js","src/create-model.js","src/middleware.js","src/vanex-middleware.js","src/vanex-context.js","src/start.js","src/extend-model.js","src/index.js"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["module.exports = require('./src/index.js')","/**\n * Vanex插件机制\n */\n\nimport invariant from 'invariant';\nimport isPlainObject from 'is-plain-object';\n\nclass Plugin {\n    constructor() {\n        this.hooks = {\n            onStateChange: [],\n            onAction: [],\n            onEffect: [],\n            onError: [],\n            beforeConnectStore: [],\n            beforeSet: [],\n        };\n    }\n\n    use(plugin) {\n        invariant(isPlainObject(plugin), 'plugin.use: plugin should be plain object');\n        const hooks = this.hooks;\n        \n        for (const key in plugin) {\n            if (Object.prototype.hasOwnProperty.call(plugin, key)) {\n                invariant(hooks[key], `plugin.use: unknown plugin property: ${key}`);\n                if (key === 'extraEnhancers') {\n                    hooks[key] = plugin[key];\n                } else {\n                    hooks[key].push(plugin[key]);\n                }\n            }\n        }\n    }\n\n    apply(key, defaultHandler) {\n        const hooks = this.hooks;\n        const validApplyHooks = ['onError', 'onStateChange', 'onAction', 'beforeConnectStore', 'beforeSet'];\n        invariant(validApplyHooks.indexOf(key) > -1, `plugin.apply: hook ${key} cannot be applied`);\n        const fns = hooks[key];\n\n        return (...args) => {\n            if (fns.length) {\n                for (const fn of fns) {\n                    fn(...args);\n                }\n            } else if (defaultHandler) {\n                defaultHandler(...args);\n            }\n        };\n    }\n\n    get(key) {\n        const hooks = this.hooks;\n        invariant(key in hooks, `plugin.get: hook ${key} cannot be got`);\n        if (key === 'extraReducers') {\n            let ret = {};\n            for (const reducerObj of hooks[key]) {\n                ret = { \n                    ...ret,\n                    ...reducerObj\n                };\n            }\n            \n            return ret;\n        } else if (key === 'onReducer') {\n            return function (reducer) {\n                for (const reducerEnhancer of hooks[key]) {\n                    reducer = reducerEnhancer(reducer);\n                }\n                \n                return reducer;\n            };\n        } else {\n            return hooks[key];\n        }\n    }\n}\n\nexport default Plugin;\n","const toString = Object.prototype.toString;\n\nimport invariant from 'invariant';\nimport {\n    observable,\n} from 'mobx';\n\n/**\n * Applies a function to every key-value pair inside an object.\n *\n * @param {Object} obj - The source object.\n * @param {Function} fn - The mapper function that receives the value and the key.\n * @param {Object?} res - Result object\n * @returns {Object} A new object that contains the mapped values for the keys.\n */\nexport function mapValues(obj, fn, res = {}) {\n    return Object.keys(obj).reduce((result, key) => {\n        const curRes = fn(obj[key], key);\n        result[key] = curRes;\n\n        return result;\n    }, res);\n}\n\nexport function deepMapValues(obj, fn, res = {}) {\n    return Object.keys(obj).reduce((result, key) => {\n        let val = obj[key];\n\n        let keys = key.split('.');\n\n        if(keys.length > 1) {\n            let len = keys.length;\n            let lastKey = keys[len - 1];\n            let lastRes;\n\n            for(let i = 0; i < len - 1; i++) {\n                let curKey = keys[i];\n\n                if(lastRes && (curKey in lastRes)) {\n                    lastRes = lastRes[curKey]; // 让lastRes取到最后一个值\n                } else if(curKey in result) {\n                    lastRes = result[curKey]; // 让lastRes取到最后一个值\n                } else {\n                    invariant(false, `[Vanex] ${curKey}属性不存在，没法直接设置。`);\n                }\n            }\n\n            lastRes[lastKey] = fn(val, lastKey);\n        } else {\n            result[key] = fn(val, key);\n        }\n\n        return result;\n    }, res);\n}\n\n/**\n * @param {*} val\n * @returns {Promise}\n */\nexport function toPromise(val) {\n    if (val && typeof val.then === 'function') {\n        return val;\n    }\n    return Promise.resolve(val);\n}\n\nexport function toObservableObj(obj = {}) {\n    return mapValues(obj, (item) => {\n        return observable(item);\n    });\n}\n\nexport function each(obj = {}, fn) {\n    Object.keys(obj).forEach((key) => {\n        fn(obj[key], key);\n    });\n}\nexport const isFunction = arg => toString.call(arg) === '[object Function]';\nexport const isRegExp = arg => toString.call(arg) === '[object RegExp]';\nexport const isObject = arg => toString.call(arg) === '[object Object]';\n\nexport function compose(arr, arg) {\n    return arr.reduce((cur, fn) => {\n        return cur.then(res => fn(res));\n    }, Promise.resolve(arg));\n}\n\nexport function nameToUpperCase(name = '') {\n    return name[0].toUpperCase() + name.slice(1);\n}\n\nexport function inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (superClass) {\n        if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(subClass, superClass);\n        } else {\n            subClass.__proto__ = superClass;\n        }\n    }\n}\n\nexport function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\n\nexport function possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\n","import {\n    action,\n    autorun,\n    extendObservable,\n    isObservableArray,\n    runInAction,\n    spy,\n    toJS,\n    computed,\n} from 'mobx';\nimport {\n    deepMapValues,\n    each,\n    isRegExp,\n    mapValues\n} from './utils';\n\nlet count = 0;\n\nexport default class MobxModel {\n    static uuid = 0\n\n    constructor(initData = {}, middleware, plugin, autorunMap = {}, constants = {}) {\n        if (this.constructor !== MobxModel && this.constructor.uuid === Object.getPrototypeOf(this.constructor).uuid) {\n            throw new Error('[Vanex] Can not immediately extend from MobxModel.');\n        }\n\n        // 保存action状态\n        this._actionStates = {};\n\n        // 保存当前传进来的中间件\n        this._middleware = middleware;\n        this._plugin = plugin;\n\n        this._id = count++;\n\n        Object\n            .keys(initData)\n            .forEach((key) => {\n                if (constants[key] !== undefined) {\n                    throw new Error(`[MobxModel] data key \"${key}\" is defined in constants`);\n                }\n            });\n\n        // check keys\n        this._dataKeys = Object\n            .keys(initData)\n            .concat(Object.keys(constants));\n\n        this._checkDataKeys();\n\n        // add constants\n        const _constants = mapValues(constants, (value) => {\n            return {\n                enumerable: true,\n                configurable: true,\n                writable: false,\n                value\n            };\n        });\n\n        // 将常量赋值给Model实例\n        Object.defineProperties(this, _constants);\n\n        extendObservable(this, initData);\n\n        // 初始化 computed\n\n        const computedMap = this.computed || [];\n        // const mobxComputeds = mapValues(computedMap, value => computed(value));\n\n        extendObservable(this, computedMap);\n\n        // 自动执行的函数map\n        each(autorunMap, autorunFn => {\n            autorun(autorunFn, this);\n        });\n\n\n        // 监听state数据状态变化钩子\n        if (this._plugin.hooks.onStateChange.length) {\n            spy(this._plugin.apply('onStateChange'));\n        }\n    }\n\n    getID() {\n        return this._id;\n    }\n\n    get dataKeys() {\n        return this._dataKeys;\n    }\n\n    set middleware(middleware) {\n        this._middleware = middleware;\n    }\n    get middleware() {\n        return this._middleware;\n    }\n\n    toJS(key) {\n        function parse(val) {\n            if (val instanceof MobxModel) {\n                return val.toJS();\n            }\n            if (Array.isArray(val) || isObservableArray(val)) {\n                return val.map(item => parse(item));\n            } else if (isRegExp(val)) {\n                return val;\n            } else if (val && typeof val === 'object') {\n                return mapValues(val, (item) => parse(item));\n            }\n\n            return toJS(val);\n        }\n\n        if (key) {\n            return parse(this[key]);\n        }\n\n        return this\n            ._dataKeys\n            .reduce((json, key) => {\n                json[key] = parse(this[key]);\n\n                return json;\n            }, {});\n    }\n\n    toJSON(key) {\n        return this.toJS(key);\n    }\n\n    stringify() {\n        return JSON.stringify(this.toJS());\n    }\n\n    each(fn) {\n        this\n            ._dataKeys\n            .map((key) => {\n                fn(this[key], key, this);\n            });\n    }\n\n    toString() {\n        return this.constructor.name;\n    }\n\n    _checkDataKeys() {\n        this\n            ._dataKeys\n            .forEach((dataKey) => {\n                if (this[dataKey]) {\n                    throw new Error(`[MobxModel] Data key \"${dataKey}\" is defined in prototype methods.`);\n                }\n            });\n    }\n\n    set(key, val) {\n        if (this._plugin.hooks.beforeSet.length) {\n            let change = {};\n            if (typeof key === 'string') {\n                change[key] = val;\n            } else {\n                change = key;\n            }\n            \n            this._plugin.apply('beforeSet')({\n                change,\n                object: this,\n            });\n        }\n        if (typeof key === 'string') {\n            this[key] = val;\n        } else {\n            // 运行一次，在给实例同步的同时，触发React Component的重新渲染\n            runInAction(() => deepMapValues(key, item => item, this));\n        }\n        return this;\n    }\n\n    getActionState(actionName) {\n        if (actionName.split('/') === -1) {\n            throw new Error(`[MobxModel] Please specify your model name as \"model/action\": ${actionName}`);\n        }\n\n        if (!this[actionName.split('/')[1]]) {\n            throw new Error(`[MobxModel] Undefined action: ${actionName}`);\n        }\n\n        if (!this._actionStates[actionName]) {\n            this.setActionState(actionName);\n        }\n\n        return this._actionStates[actionName];\n    }\n\n    setActionState(actionName, val) {\n        extendObservable(this._actionStates, {\n            [actionName]: val || {\n                loading: false,\n                error: null\n            }\n        });\n    }\n\n}\n\n// 同步数据处理\nexport function toMobxSyncActions(name, syncs, plugin) {\n    return mapValues(syncs, (actionFn, actionName) => {\n        return function mobxAction(...actionArgs) {\n            // 执行钩子函数\n            const result = action(actionFn).apply(this, actionArgs);\n\n            if (plugin.hooks.onAction.length) {\n                plugin.apply('onAction')({\n                    actionName,\n                    actionArgs,\n                    result,\n                });\n            }\n\n            return result;\n        };\n    });\n}\n\n// 对effects的处理\nexport function toMobxAsyncActions(modelName, actions) {\n    // 其实就是对每一个开发者定义的Model中的action包装成mobxAction\n    return mapValues(actions, (actionFn, actionName) => {\n        actionName = `${modelName}/${actionName}`;\n\n        return function mobxAction(...actionArgs) {\n            const actionContext = this;\n\n            // 1. add loading state and save the pre error\n            this.setActionState(actionName, {\n                loading: true,\n                error: this\n                    .getActionState(actionName)\n                    .error\n            });\n\n            // 2. exec action with hooks\n            return this\n                ._middleware\n                .execAction({\n                    actionFn: action(actionFn),\n                    actionName,\n                    actionArgs,\n                    actionContext\n                })\n                .then(payload => {\n                    // 3. loaded success\n                    this.setActionState(actionName, {\n                        loading: false,\n                        error: null\n                    });\n\n                    return payload;\n                })\n                .catch(error => {\n                    // 4. loaded error\n                    this.setActionState(actionName, {\n                        loading: false,\n                        error\n                    });\n\n                    throw error;\n                });\n        };\n    });\n}\n\nexport function isMobxModelClass(target) {\n    return target === MobxModel || target.prototype instanceof MobxModel;\n}\n","import {compose, isRegExp} from './utils';\nimport {autorun} from 'mobx';\n\nconst emptyFn = () => {};\n\nfunction spliter(target, keys, fn) {\n    if (keys.length === 0) {\n        return fn(target);\n    }\n\n    return target.split(keys[0]).map(item => spliter(item, keys.slice(1), fn)).filter(item => item);\n}\n\nfunction isActionKey(key) {\n    return key && key.split('.').length === 2;\n}\n\nfunction checkFilters(filters) {\n    if (typeof filters === 'object') {\n        Object.keys(filters).forEach((key) => {\n            const filter = filters[key];\n            if (typeof filter !== 'function') {\n                throw new TypeError(`[MobxRelation] filters \"${key}\" must be a function`);\n            }\n        });\n    } else {\n        throw new TypeError('[MobxRelation] filters must be an Object.');\n    }\n}\n/**\n * regexp support\n */\nexport default class MobxRelation {\n    constructor(opts = {}) {\n        this._relations = [];\n        this._filters = {};\n        this._inits = [];\n        this._autoruns = [];\n        this.addFilters(opts.filters);\n    }\n\n    addFilters(filters = {}) {\n        checkFilters(filters);\n        this._filters = {\n            ...this._filters,\n            ...filters\n        };\n    }\n\n    init(initFn) {\n        if (typeof initFn === 'function') {\n            this._inits.push(initFn);\n        } else {\n            throw new Error(`[MobxRelation] Relation init need a function but get ${typeof initFn}.`);\n        }\n    }\n\n    use(...args) {\n        args.forEach((fn) => {\n            if (typeof fn === 'function') {\n                fn(this);\n            } else {\n                throw new Error(`[MobxRelation] relation.use need functions but get ${typeof fn}.`);\n            }\n        });\n    }\n\n    autorun(autorun) {\n        if (typeof autorun === 'function') {\n            this._autoruns.push(autorun);\n        } else {\n            throw new Error('[MobxRelation] Relation autorun need a function.');\n        }\n    }\n\n    triggerAutorun(context) {\n        this._autoruns.forEach(fn => {\n            autorun(fn.bind(null, context.data));\n        });\n    }\n\n    triggerInit(context) {\n        this._inits.forEach(fn => fn(context.data));\n    }\n\n    listen(patterns, fn, errorFn) {\n        if (typeof patterns === 'string') {\n            patterns = patterns.split(/\\r?\\n/)\n            // filter \"#...\" comments\n                .filter(item => item && !/^\\s*#.*$/.test(item)).join('').replace(/\\s*/g, '').split(';').filter(item => item);\n            if (patterns.length === 0) {\n                throw new Error('[MobxRelation] Relation pattern can not be empty.');\n            }\n            patterns.forEach(pattern => this._addRelation(pattern, fn, errorFn));\n        } else if (isRegExp(patterns)) {\n            this._addRelation(patterns, fn, errorFn);\n        } else {\n            throw new Error('[MobxRelation] Listen pattern must be a String or RegExp.');\n        }\n        return this;\n    }\n\n    execInMiddleware({fullname, payload, context}) {\n        context = {\n            ...context.data\n        };\n        this._relations.forEach(({pattern, fn, errorFn}) => {\n            let chain = [];\n\n            if ((!isRegExp(pattern.action) && fullname !== pattern.action) || (isRegExp(pattern.action) && !pattern.action.test(fullname))) {\n                return;\n            }\n\n            try {\n                pattern.chain.forEach((item, index) => {\n                    chain = chain.concat(item);\n                    if (pattern.chain.length - 1 !== index) {\n                        chain.push(emptyFn);\n                    }\n                });\n\n                chain = chain.map((key) => {\n                    if (typeof key === 'string') {\n                        if (isActionKey(key)) {\n                            const [name, action] = key.split('.');\n                            const model = context[name];\n                            if (model && model[action]) {\n                                return model[action].bind(model);\n                            }\n                            throw new Error(`[MobxRelation] Action \"${key}\" is not defined.`);\n                        }\n                        return this._filters[key];\n                    }\n                    return key;\n                });\n\n                compose(chain, payload).then(res => fn({context, payload: res, action: fullname})).catch(e => errorFn({context, payload: e, action: fullname}));\n            } catch (e) {\n                errorFn({context, payload: e, action: fullname});\n            }\n        });\n    }\n\n    parsePattern(pattern) {\n        if (isRegExp(pattern)) {\n            return {action: pattern, refs: [], chain: []};\n        }\n        pattern = pattern.replace(/\\s*/g, '');\n        if (!pattern) {\n            throw new Error(`[MobxRelation] Relation pattern can not be empty.`);\n        }\n        if (!/^[\\#\\-\\>\\=\\.a-zA-Z_0-9\\|]+$/.test(pattern)) {\n            throw new Error(`[MobxRelation] Relation pattern \"${pattern}\" illegal.`);\n        }\n        const refs = [];\n        const chain = spliter(pattern, [\n            '->', /\\=\\>|\\|/\n        ], (key) => {\n            if (isActionKey(key)) {\n                const modelName = key.split('.')[0];\n                if (!refs.includes(modelName))\n                    refs.push(modelName);\n                }\n            else if (key && !this._filters[key]) {\n                throw new Error(`[MobxRelation] Undefined filter \"${key}\"`);\n            }\n            return key;\n        }).filter(item => item.length !== 0);\n        const action = chain[0][0];\n        if (!action || !isActionKey(action)) {\n            throw new Error('[MobxRelation] Relation pattern need an dispatcher action.');\n        }\n        chain[0] = chain[0].slice(1);\n        return {action, refs, chain};\n    }\n\n    _addRelation(pattern, fn, errorFn) {\n        pattern = this.parsePattern(pattern);\n        this._relations.push({\n            pattern,\n            fn: fn || emptyFn,\n            errorFn: errorFn || function({payload}) {\n                throw payload;\n            }\n        });\n    }\n}\n","import _MobxModel, {\n    isMobxModelClass,\n    toMobxAsyncActions,\n    toMobxSyncActions,\n} from './vanex-model';\nimport {\n    classCallCheck,\n    inherits,\n    nameToUpperCase,\n    possibleConstructorReturn\n} from './utils';\n\nlet uuid = 0;\n\nexport default function createModel({\n    name,\n    data = {},\n    constants = {},\n    privates = {},\n    autorun = {},\n    syncs = {}, // 同步处理数据\n    effects = {}, // 异步处理数据\n    ...others,\n}, Parent = _MobxModel) {\n    if (!isMobxModelClass(Parent)) {\n        throw new Error('[createModel] Parent class must extend From MobxModel.');\n    }\n    if (!name) {\n        throw new Error('[createModel] need a name.');\n    }\n\n    function MobxModel(_initData = {}, middleware, plugin, _autorun, _constants) {\n        classCallCheck(this, MobxModel);\n\n        if (typeof data === 'function') {\n            throw new Error('[createModel] `data` can not be a function, please use `init` instead.');\n        }\n\n        const mobxSyncs = toMobxSyncActions(name, syncs, plugin);\n        const mobxAsyncs = toMobxAsyncActions(name, effects, plugin);\n\n        Object.assign(this, mobxSyncs, mobxAsyncs);\n\n        // Object.getPrototypeOf(MobxModel)指向_MobxModel的构造函数\n        const res = possibleConstructorReturn(\n            this,\n            Object.getPrototypeOf(MobxModel).call(\n                this,\n                {\n                    ...data,\n                    ..._initData\n                },\n                middleware,\n                plugin,\n                {\n                    ...autorun,\n                    ..._autorun\n                },\n                {\n                    ...constants,\n                    ..._constants\n                }\n            )\n        );\n\n        return res;\n    }\n\n    MobxModel.uuid = ++uuid;\n    MobxModel.syncs = syncs;\n    MobxModel.effects = effects;\n    MobxModel.autorun = autorun;\n\n    inherits(MobxModel, Parent);\n\n    // Define MobxModel name\n    Object.defineProperties(MobxModel, {\n        name: {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: nameToUpperCase(name),\n        },\n    });\n\n    MobxModel.prototype = Object.assign(MobxModel.prototype, others, privates);\n\n    return MobxModel;\n}\n","import {\n    isFunction\n} from './utils';\n\nexport default class Middleware {\n    middleware = [];\n\n    constructor(middleware) {\n        this.use(middleware);\n    }\n\n    /**\n     * Add middleware\n     * @param  {Function|Array<Function>} middleware\n     */\n    use(middleware = []) {\n        if (!Array.isArray(middleware)) {\n            middleware = [middleware];\n        }\n\n        for (const fn of middleware) {\n            if (!isFunction(fn)) {\n                throw new TypeError('Middleware must be composed of functions!');\n            }\n        }\n        \n        this.middleware = [...this.middleware, ...middleware];\n    }\n\n    remove(middleware = []) {\n        if (!Array.isArray(middleware)) {\n            middleware = [middleware];\n        }\n\n        middleware.forEach((item) => {\n            const index = this.middleware.indexOf(item);\n            this.middleware.splice(index, 1);\n        });\n    }\n\n    isEmpty() {\n        return this.middleware.length === 0;\n    }\n\n    /**\n     * Compose all middleware\n     * @param {object} arg\n     * @return {Promise}\n     */\n    compose(arg = {}) {\n        return this.middleware.reduce((pm, fn) => {\n            return pm.then((payload) => {\n                return fn({...arg,\n                    payload\n                });\n            });\n        }, Promise.resolve(arg.payload));\n    }\n}\n","import {\n    isRegExp,\n    mapValues\n} from './utils';\n\nimport Middleware from './middleware';\n\nconst KEYS = ['before', 'after', 'error', 'filter'];\n\nfunction toFilter(filter) {\n    if (isRegExp(filter)) {\n        return ({\n            type\n        }) => filter.test(type);\n    } else if (typeof filter === 'string') {\n        return ({\n            type\n        }) => filter === type;\n    } else if (typeof filter === 'function') {\n        return filter;\n    }\n    throw new TypeError('[ComposeMiddleware] Middleware filter must be RegExp, String or Function.');\n}\n\nexport class ComposeMiddleware {\n    static toStandardMiddleware(_middleware = {}) {\n        if (typeof _middleware === 'function') {\n            return {\n                after: _middleware,\n            };\n        } else if (typeof _middleware === 'object') {\n            const middleware = {};\n            Object.keys(_middleware).forEach(key => {\n                if (!KEYS.includes(key)) {\n                    throw new Error(`[ComposeMiddleware] Middleware key must one of \"${KEYS.join(' ,')}\"`);\n                }\n                // filter empty middleware\n                if (_middleware[key]) {\n                    middleware[key] = _middleware[key];\n                }\n            });\n\n            if (middleware.filter) {\n                const filter = toFilter(middleware.filter);\n                delete middleware.filter;\n                // to filter function\n                return mapValues(middleware, (res) => {\n                    res = Array.isArray(res) ? res : [res];\n                    return res.map((fn) => {\n                        return function middlewareFilterMixin({\n                            payload\n                        }) {\n                            if (!filter(...arguments)) {\n                                 return payload;\n                            }\n                                \n                            return fn(...arguments);\n                        };\n                    });\n                }, {});\n            }\n            return middleware;\n        }\n        throw new TypeError('[ComposeMiddleware] Middleware must be a function or object but get ' + _middleware);\n    }\n\n    constructor() {\n        this._before = new Middleware;\n        this._after = new Middleware;\n        this._error = new Middleware;\n    }\n\n    use(...args) {\n        const removes = [];\n        args.forEach(middleware => {\n            middleware = ComposeMiddleware.toStandardMiddleware(middleware);\n            Object.keys(middleware).forEach(pos => {\n                const cur = this['_' + pos];// before | after | error\n                cur.use(middleware[pos]);\n                removes.push(() => cur.remove(middleware[pos]));\n            });\n        });\n\n        return function removeMiddlewares() {\n            removes.map(rm => rm());\n        };\n    }\n\n    execAction({\n        actionFn,\n        actionArgs = [],\n        actionName,\n        actionContext\n    }) {\n        const args = {\n            action: `${actionContext}/${actionName}`,\n            model: actionContext,\n            type: `${actionContext}.${actionName}`\n        };\n\n        return this\n            ._before\n            .compose({\n                ...args,\n                payload: actionArgs,\n                pos: 'before'\n            })\n            .then(args => {\n                if (!Array.isArray(args)) {\n                    throw new Error('[ComposeMiddleware] Pre middleware must return arguments');\n                }\n\n                return actionFn.apply(actionContext, args);\n            })\n            .then(payload => {\n                return this._after.compose({\n                    ...args,\n                    payload,\n                    pos: 'after'\n                });\n            })\n            .catch(error => {\n                return this._error.compose({\n                    ...args,\n                    payload: error,\n                    pos: 'error'\n                }).then(error => {\n                    if (error instanceof Error) {\n                        throw error;\n                    }\n                    return error;\n                });\n            });\n    }\n}\n\nexport default new ComposeMiddleware;\n","/**\n * MobxContent:在执行start初始化应用的时候，会:\n * 1、将传递进来的配置项（Model/Middleware/Relation保存处理）；\n * 2、实例化传递进来的Model数据，并将middleware作为参数传进去；\n * 3、执行Relation的相关操作，初始化及Middleware添加hook。\n * */\n\nimport MobxModel, {isMobxModelClass} from './vanex-model';\nimport {each, isObject, mapValues} from './utils';\n\nimport MobxRelation from './vanex-relation';\nimport createModel from './create-model';\nimport globalMiddleware from './vanex-middleware';\n\nexport default class MobxContext {\n    /**\n     * @param {Object} models\n     * @param {Object} opts\n     *    - parentContext\n     *    - middleware\n     *    - relation\n     */\n    constructor(models = {}, opts = {}) {\n        this._middleware = opts.middleware || globalMiddleware;\n        this._relation = opts.relation || new MobxRelation;\n        this._plugin = opts.plugin;\n\n        this._models = {};\n\n        this.models = models;\n\n        this.setData(models);\n\n        this._addRelationMiddleware();\n\n        // trigger relation init function in async\n        setTimeout(() => {\n            this._relation.triggerInit(this);\n            this._relation.triggerAutorun(this);\n        });\n    }\n\n    set models(models) {\n        // 校验是否重名\n        Object.keys(models).some(key => {\n            if(key in this._models) {\n                console.error(`[vanex]: You have already existed the same model key: '${key}'`);\n\n                return true;\n            }\n        });\n\n        this._models = Object.assign((this._models || {}), models);\n    }\n\n    setData(models) {\n        this._data = Object.assign({}, this._data, mapValues(models, Model => {\n            if(isObject(Model)) {\n                Model = createModel(Model);\n            }\n\n            // Get a class\n            if (isMobxModelClass(Model)) {\n                const result = new Model(null, this._middleware, this._plugin);\n                return result;\n            }\n\n            // Get an instance\n            if (Model instanceof MobxModel) {\n                // update model's middleware\n                Model.middleware = this._middleware;\n                Model._plugin = this._plugin;\n                return Model;\n            }\n        }));\n    }\n\n    addModel(models) {\n        this.models = models;\n\n        this.setData(models);\n    }\n\n    _addRelationMiddleware() {\n        if (this._relationRemove) {\n            return;\n        }\n\n        const hook = arg => {\n            const fullname = `${this._findKeyByModel(arg.model)}.${arg.action}`;\n\n            // exec async\n            setTimeout(() => {\n                this._relation.execInMiddleware({\n                    ...arg,\n                    fullname,\n                    context: this,\n                });\n            });\n\n            return arg.payload;\n        };\n\n        // 在这里设置了relation进去，使得在中间件执行结束后会自动执行这里的hook\n        this._relationRemove = this._middleware.use({\n            after: hook\n        });\n    }\n\n    set relation(newRelation) {\n        this._relation = newRelation;\n    }\n\n    get relation() {\n        return this._relation;\n    }\n\n    get middleware() {\n        return this._middleware;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    destroy() {\n        // remove relation middleware\n        if (this._relationRemove) {\n            this._relationRemove();\n            this._relationRemove = null;\n        }\n    }\n\n    checkMobxModels(mobxModels) {\n        if (Array.isArray(mobxModels)) {\n            mobxModels.forEach((name) => {\n                if (!this._data[name]) {\n                    throw new Error(`[@observer] Can not find data \"${name}\" in MobxContext.`);\n                }\n            });\n        } else {\n            each(mobxModels, (MobxModel, name) => {\n                if (this._data[name]) {\n                    if (!isMobxModelClass(MobxModel)) {\n                        throw new TypeError(`[@observer] MobxContext required MobxModel class.`);\n                    }\n                    if (!(this._data[name]instanceof MobxModel)) {\n                        throw new TypeError(`[@observer] ${name} is not instance of ${MobxModel.name}.`);\n                    }\n                } else {\n                    throw new Error(`[@observer] Can not find data \"${name}\" in MobxContext.`);\n                }\n            });\n        }\n    }\n\n    pick(...keys) {\n        return keys.reduce((obj, key) => {\n            if (!this._data[key])\n                throw new Error(`[MobxContext] Can not find data \"${key}\" in MobxContext.`);\n            obj[key] = this._data[key];\n            return obj;\n        }, {});\n    }\n\n    find(key) {\n        if (!this._data[key])\n            throw new Error(`[MobxContext] Can not find data \"${key}\" in MobxContext.`);\n        return this._data[key];\n    }\n\n    _findKeyByModel(model) {\n        return Object.keys(this._data).find(key => this._data[key] === model);\n    }\n}\n","/**\n * Tips：\n * 如果start没有配置container选项，则返回一个可渲染的组件；\n * 如果传递了container，则执行渲染。\n * */\n\nimport React, { Component } from 'react';\n\nimport Plugin from './plugin';\nimport {Provider} from 'mobx-react';\nimport VanexContext from './vanex-context';\nimport VanexRelation from './vanex-relation';\nimport middleware from './vanex-middleware';\nimport { render } from 'react-dom';\n\nconst globalPlugin = new Plugin();\n\nvar context;\nvar started = false;\n\nexport default({\n    component: ContainerComponent,\n    models,\n    container,\n    relation = new VanexRelation\n}) => {\n    started = true;\n\n    // 保证context只实例化一次\n    if(context) {\n        addModel(models);\n    } else {\n        context = new VanexContext(models, {\n            middleware,\n            relation,\n            plugin: globalPlugin,\n        });\n    }\n\n    // 否则返回可执行组件\n    class VanexComponent extends Component {\n        constructor(props, context) {\n            super(props, context);\n        }\n\n        get mobxStores() {\n            return this.refs['_conatinerComponent'].context.mobxStores;\n        }\n\n        render() {\n            const data = globalPlugin.apply('beforeConnectStore')(context.data) || context.data;\n\n            return (\n                <Provider {...data}>\n                    <ContainerComponent ref='_conatinerComponent' {...this.props} />\n                </Provider>\n            );\n        }\n    }\n\n\n    let containerEl = container;\n\n    if(containerEl) {\n        // 如果传递了容器(选择器)，则执行渲染\n        if (typeof(container) === 'string') {\n            containerEl = document.querySelector(container);\n        }\n\n        render(<VanexComponent />, containerEl);\n    } else {\n        return VanexComponent;\n    }\n};\n\n// 初始化后再添加model\nexport function addModel(models, callback) {\n    // 必须先执行初始化\n    if(!started) {\n        throw new Error('[vanex]: Init your app first!');\n    }\n\n    // 将models添加进context\n    context.addModel(models);\n}\n\nexport function use(plugin) {\n    const {\n        onEffect = [],\n        ...restPlugin,\n    } = plugin;\n\n    // 异步请求中间件\n    onEffect.forEach(item => middleware.use(item));\n\n    // 插件机制\n    globalPlugin.use(restPlugin);\n}\n","import createModel from './create-model';\n\nimport {\n    isObject,\n} from './utils';\n\nexport default function extendModel(parentModel, configs = {}) {\n    if (!configs.name) {\n        throw new Error('[extendModel] need a name.');\n    }\n\n    if(isObject(parentModel)) {\n        parentModel = createModel(parentModel);\n    }\n\n    return createModel(configs, parentModel);\n}\n","import * as mobx from 'mobx';\nimport * as mobxReact from 'mobx-react';\n\nimport start, { addModel, use } from './start';\n\nimport Relation from './vanex-relation';\nimport createModel from './create-model';\nimport extendModel from './extend-model';\n\nexport default {\n    ...mobx,\n    ...mobxReact,\n    createModel,\n    extendModel,\n    start,\n    Relation,\n    addModel,\n    use,\n};\n"]}